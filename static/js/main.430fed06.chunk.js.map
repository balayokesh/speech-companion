{"version":3,"sources":["Images/microphone.svg","Images/microphone-muted.svg","Images/speaker-muted.svg","Images/speaker.svg","App.js","index.js"],"names":["App","speakContent","document","getElementById","src","Speaker","msg","SpeechSynthesisUtterance","text","textContent","window","speechSynthesis","speak","addEventListener","SpeakerMuted","useEffect","detectKeyDown","e","preventDefault","key","ctrlKey","listening","SpeechRecognition","stopListening","startListening","useSpeechRecognition","transcript","browserSupportsSpeechRecognition","id","Microphone","MicrophoneMuted","alt","className","onClick","title","contentEditable","location","reload","ReactDOM","render","StrictMode"],"mappings":"0OAAe,MAA0B,uCCA1B,MAA0B,6CCA1B,MAA0B,0CCA1B,MAA0B,oC,OC+E1BA,MA/Df,WAEE,SAASC,IACPC,SAASC,eAAe,WAAWC,IAAMC,EACzC,IAAIC,EAAM,IAAIC,yBACdD,EAAIE,KAAON,SAASC,eAAe,YAAYM,YAC/CC,OAAOC,gBAAgBC,MAAMN,GAE7BA,EAAIO,iBAAiB,OAAO,WAC1BX,SAASC,eAAe,WAAWC,IAAMU,KAI7CC,qBAAU,WACRb,SAASW,iBAAiB,UAAWG,GAAe,KACnD,IAEH,IAAMA,EAAgB,SAACC,GACrBA,EAAEC,iBACY,MAAVD,EAAEE,KAAeF,EAAEG,SACrBnB,IAEY,MAAVgB,EAAEE,KAAeF,EAAEG,UACjBC,EACFC,IAAkBC,gBAGlBD,IAAkBE,mBAKxB,EAIIC,iCAHFC,EADF,EACEA,WACAL,EAFF,EAEEA,UAQF,OAVA,EAGEM,iCAYA,sBAAKC,GAAG,cAAR,UACE,qBAAKxB,IAAKiB,EAAYQ,EAAaC,EAAiBF,GAAG,aAAaG,IAAI,aAAaC,UAAU,eAAeC,QAASZ,EAAYC,IAAkBC,cAAgBD,IAAkBE,eAAgBU,MAAM,aAC7M,sBAAKF,UAAU,eAAeJ,GAAG,SAAjC,UACE,qBAAKO,iBAAe,EAACP,GAAG,WAAxB,SACGF,EAAa,4BAAIA,IAAkB,+IAItC,wBAAQO,QAjBA,WACZvB,OAAO0B,SAASC,UAgBYT,GAAG,QAA3B,sBAGF,qBAAKxB,IAAKU,EAAcmB,QAAShC,EAAc2B,GAAG,UAAUG,IAAI,UAAUC,UAAU,eAAeE,MAAM,gBAfpG,gFCtDXI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtC,SAASC,eAAe,W","file":"static/js/main.430fed06.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/microphone.b9764a69.svg\";","export default __webpack_public_path__ + \"static/media/microphone-muted.bcadbc7e.svg\";","export default __webpack_public_path__ + \"static/media/speaker-muted.0347a829.svg\";","export default __webpack_public_path__ + \"static/media/speaker.6a264f35.svg\";","// Import style sheets\r\nimport './Styles/App.css';\r\n\r\n// Import NPM packages\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition'\r\n\r\n// Import images\r\nimport Microphone from './Images/microphone.svg';\r\nimport MicrophoneMuted from './Images/microphone-muted.svg';\r\nimport SpeakerMuted from './Images/speaker-muted.svg';\r\nimport Speaker from './Images/speaker.svg';\r\n\r\n\r\n// For keyboard shortcuts\r\nimport { useEffect } from 'react';\r\n\r\nfunction App() {\r\n\r\n  function speakContent() {\r\n    document.getElementById(\"speaker\").src = Speaker;\r\n    var msg = new SpeechSynthesisUtterance();\r\n    msg.text = document.getElementById('textarea').textContent;\r\n    window.speechSynthesis.speak(msg);\r\n\r\n    msg.addEventListener(\"end\", () => {\r\n      document.getElementById(\"speaker\").src = SpeakerMuted;\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', detectKeyDown, true)\r\n  }, [])\r\n\r\n  const detectKeyDown = (e) => {\r\n    e.preventDefault()\r\n    if (e.key === \"s\" && e.ctrlKey) {\r\n      speakContent()\r\n    }\r\n    if (e.key === \"m\" && e.ctrlKey) {\r\n      if (listening) {\r\n        SpeechRecognition.stopListening()\r\n      }\r\n      else {\r\n        SpeechRecognition.startListening()\r\n      } \r\n    }\r\n  }\r\n\r\n  const {\r\n    transcript,\r\n    listening,\r\n    browserSupportsSpeechRecognition\r\n  } = useSpeechRecognition();\r\n\r\n  const reset = () => {\r\n    window.location.reload();\r\n  }\r\n\r\n  if (!browserSupportsSpeechRecognition) {\r\n    return <span>Browser doesn't support speech recognition.</span>;\r\n  }\r\n\r\n  return (\r\n    <div id='flex-parent'>\r\n      <img src={listening ? Microphone : MicrophoneMuted} id='microphone' alt='microphone' className='flex-element' onClick={listening ? SpeechRecognition.stopListening : SpeechRecognition.startListening} title='Ctrl + M' />\r\n      <div className='flex-element' id='center'>\r\n        <div contentEditable id='textarea'>\r\n          {transcript ? <p>{transcript}</p> : <p>Click the mike button and start speaking\r\n            (or)\r\n            Click on right speaker button to speak the contents in the box</p>}\r\n        </div>\r\n        <button onClick={reset} id='reset'>Reset</button>\r\n      </div>\r\n\r\n      <img src={SpeakerMuted} onClick={speakContent} id='speaker' alt='speaker' className='flex-element' title='Ctrl + S' />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Styles/index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}